# 4. Задание
# Внесите 12 правок в свой код, в которых улучшите работу с константами,
# и напишите по каждой, что конкретно вы улучшили.


1
# задача о вычислении площади круга
Было:
square = 3,1415926535 * r ** 2
константу "Пи" записал отдельно
Стало:
PI = 3,1415926535
square = PI* r ** 2


2, 3
# Разработка фитнесс-трекера (учебная задача от Я.Практикума)
# формула расчета дистанции исходя из счетчика шагов/гребков
distance = self.action * 1.38 / 1000
# Внесена константа (внутри класса) - длина человеческого шага 
# Внесена константа (также внутри класса) - количство метров в км
LEN_STEP = 1.38
# Стало
distance = self.action * self.LEN_STEP / self.M_IN_KM


4
# Разработка фитнесс-трекера
# формула первода длительности тренировки из часов в минуты
# Было
duration_min = self.duration * 60
# Стало
duration_min = self.duration * self.MIN_PER_HOUR
# Убрано "магическое число", появилась константа с "говорящим"названием


5, 6
# Разработка фитнес-трекера
# Формула расчета калорий для плавания
# Коэффициент расхода калорий для плавания вынесен в константу
# Коэффициент расхода калорий для бега вынесен в константу
# Было:
calories = ((0.035 * self.weight
             + (self.get_mean_speed()** 2// self.height)
             * 0.029 * self.weight) * duration_min)
# Стало:
CALORIES_FOR_SWIMMING = 0.035
CALORIES_FOR_RUNNING = 0.029
calories = ((CALORIES_FOR_SWIMMING * self.weight
             + (self.get_mean_speed()** 2// self.height)
             * CALORIES_FOR_RUNNING * self.weight) * duration_min)


7
# Телеграм-бот для взаимодействия с сервисом и отправки сообщений в чат
# по результатам этого взаимодействия
# Бот должен активироваться каждые 10 минут
# Было
time.sleep(600)
# Стало
RETRY_PERIOD = 600
time.sleep(RETRY_PERIOD)
# Убрано "магическое число", появилась константа с "говорящим"названием


8
# Разработка телеграм-бота (отправляет рандомное фото котиков в чат)
# Было:
response = requests.get('https://api.thecatapi.com/v1/images/search')
# указан эндпойнт для получения фотографии кота

# Стало:
SERVICE_URL = 'https://api.thecatapi.com/v1/images/search'
response = requests.get(SERVICE_URL)


9
# Джанго-проект. Социальная сеть. Реализация пагинатора (ограничение по 10 постов на странице)
# Было (в файле views.py)
p = Paginator(list_items, 10)
# Стало
# settings.py
PAGINATION_COUNT = 10
# views.py
p = Paginator(list_items, settings.PAGINATION_COUNT)


10
# Задача о разблокировке мобильных телефонов (курс 24 задачи)
# Было:
result += 1.4142135623730950488016887242097 
# Стало:
DIAGONAL_STEP = 1.4142135623730950488016887242097
...
result += DIAGONAL_STEP
# теперь при диагональном перемещении длина линии увеличивается на понятную величину


11
# Задача о выборах (курс 24 задачи)
# Условие присвоения победителю звания "majority winner" - преодоление порога в 50% голосов 
# Было
if winner / sum_votes > 0.5:
    ...
# Стало
MAJORITY_LIMIT = 0.5
if winner / sum_votes > MAJORITY_LIMIT:
    ...


12
# Задача об экономии тонера (курс 24 задачи)
# Для решения я завел переменную cod
# и наполнил ее значеними "стоимости" каждого символа
cod = []
сost = [0, ' ']
cod.append(сost)
сost = [3, '`', "'"]
cod.append(сost)
...
# Правильнее сделать это не в переменной, а в константе (чтоб потом не путаться)
# и при этом сразу сделать ее словарем и наполнить "ценами"
COD = {
    0: [' '],
    3: ['`', "'"],
    4: ['.'],
    ...
}
