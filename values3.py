7.1
# Приведите пять примеров правильного именования булевых переменных в вашем коде в формате
# "было - стало".

1
# Задача "Яндекс-такси" из курса "24 задачи"
# Было:
Step = True     # флаг обозначает возможность двигаться дальше
# Стало:
movement_possibility = True

2
# Задача "Первоклассники" из курса "24 задачи"
# Было:
result = True
# Стало
is_correct_string = True

3
# Задача № 8 (Литкод), myAtoi - преобразование строки в 32-разрядное целое число
# Было
Spases = True       # Убираем ведущие пробелы
# Стало
is_spase = True

4
# задача №25 (Литкод) Reverse Nodes in k-Group
# Было
Reverce = True    # Флаг, обозначающий необходимость реверса
# Стало
reverce_is_required = True

5
# Задача № 29 (Литкод) - деление двух целых чисел
# Было
positive = dividend >= 0 and divisor >= 0 or dividend < 0 and divisor < 0
# флаг обозначающий знак результата
# Стало
is_positive = dividend >= 0 and divisor >= 0 or dividend < 0 and divisor < 0


7.2
# Найдите несколько подходящих случаев, когда в вашем коде можно использовать
# типичные имена булевых переменных.

1
# Задача "Ближайший ноль" в "яндекс-контесте"
# В задаче представлен список чисел - нужно обработать "участки" этого списка 
# между нулевыми элементами (A[i] == 0)
# участок от первого элемента списка до первого встреченного нуля я обозначил флагом is_first_part
is_first_part = True

2
# Задача "Яндекс-такси" из курса "24 задачи"
# Тут можно бы ввести для светофоров отдельную булеву функцию is_green(current_time),
# которая показывает фазу светофора в конкретный момент времени
# Тогда не пришлось бы постонно обсчитывать весь набор светофоров (на каждом временном шаге),
# а можно было бы оценивать светофор подъехав к нему.


7.3
# Проверьте, правильно ли вы даёте имена индексам циклов. Попробуйте найти случай,
# когда вместо i j k нагляднее использовать более выразительное имя.

# Я, как правило, использую первым индексом - букву i.
# Вторым (для вложенного цикла) - j.
# Если (очень редко) понадобится третий (трехмерные массивы, например) - k.
# Другое имя для индекса цикла - думаю, это нужно только когда задача требует
# какой-то особенной наглядности. Мне таких не попадалось...


7.4
# Попробуйте найти в своих решениях два-три случая,
# когда можно использовать пары имён - антонимы.

# Задача №34.(Литкод) Find First and Last Position of Element in Sorted Array 
# В задаче использовался бинарый поиск с аргументами left и right
def binary_search(nums, target, left=0, right=float('inf')):
    ...

# Задача 35. Search Insert Position (Литкод)
# Также используется двоичный поиск с такими же аргументами

# Вообще, во всех типовых задачах на "два указателя" лучше использовать не i и j,
# а указатели left и right, small и big или что-то в этом духе.



7.5
# Всем ли временным переменным в вашем коде присвоены выразительные имена?
# Найдите несколько случаев, когда временные переменные надо переименовать,
# и поищите, возможно, от некоторых временных переменных вам получится
# вообще полностью избавиться.

1
# Задача "Поиск слова в тексте" из курса 24 задачи
# Я назвал результирующий список Ansver(так как в нем хранились результаты)
# a лучше было бы использовать имя search_rezults

2
# Задача "Разность длинных чисел" из курса 24 задачи
bol - reduced_number     # большее число из двух - уменьшаемое 
men - subtracted_number  # меньшее число, вычитаемое
res - difference         # результат вычислений - разность чисел


3
# Задача "146%" из курса 24 задачи
# Можно избавиться от переменной K (индекс победившего кандидата)
# вызвав вместо нее стандартный метод list.index(item).
